[pytest]
# Test file patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Ignore certain directories
norecursedirs = .git .cache __pycache__ venv

# Logging settings
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
addopts = 
    --verbose
    --strict-markers
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail

# Define custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Configure test coverage
[coverage:run]
branch = True
source = .
omit =
    tests/*
    setup.py
    venv/*
    .pytest_cache/*
    __pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == .__main__.:
    raise NotImplementedError
    pass
    raise AssertionError

# Show missing lines in coverage report
show_missing = True

# Fail if coverage is below this threshold
fail_under = 80
